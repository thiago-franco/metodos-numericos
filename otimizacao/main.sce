// This GUI file is generated by guibuilder version 3.0
//////////
f=figure('figure_position',[-8,-8],'figure_size',[1382,744],'auto_resize','on','background',[-3],'figure_name','Janela gráfica número %d');
//////////
delmenu(f.figure_id,gettext('File'))
delmenu(f.figure_id,gettext('?'))
delmenu(f.figure_id,gettext('Tools'))
toolbar(f.figure_id,'off')
handles.dummy = 0;
handles.set_funcao=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1554319,0.8518497,0.125625,0.05625],'Relief','default','SliderStep',[0.01,0.1],'String','Ackley|Beale|Goldstein-Price|Booth|Bukin|Matyas|Lévi|Three-hump Camel|Eggholder|McCormick','Style','popupmenu','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','set_funcao','Callback','set_funcao_callback(handles)')
handles.funcao=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[13],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.2808199,0.8526028,0.499375,0.0529167],'Relief','default','SliderStep',[0.01,0.1],'String',' escolha uma função...','Style','text','Value',[1876],'VerticalAlignment','middle','Visible','on','Tag','funcao','Callback','')
handles.otimizar=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.68240625,0.74225,0.074375,0.06575],'Relief','default','SliderStep',[0.01,0.1],'String','otimizar','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','otimizar','Callback','otimizar_callback(handles)')
handles.titulo=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[20],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.2359375,0.935,0.51875,0.05625],'Relief','default','SliderStep',[0.01,0.1],'String','Métodos Numéricos de Otimização','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','titulo','Callback','')
handles.grafico=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7840625,0.8493886,0.064375,0.058],'Relief','default','SliderStep',[0.01,0.1],'String','gráfico','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','grafico','Callback','grafico_callback(handles)')
handles.curvas_nivel=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.8501611,0.8500997,0.104375,0.058],'Relief','default','SliderStep',[0.01,0.1],'String','curvas de nível','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','curvas_nivel','Callback','curvas_nivel_callback(handles)')
handles.label_funcao=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[17],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0522255,0.8551402,0.095,0.0436137],'Relief','default','SliderStep',[0.01,0.1],'String','Função Objetivo:','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','label_funcao','Callback','')
handles.label_metodo=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[17],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0527086,0.7554517,0.0805271,0.0451713],'Relief','default','SliderStep',[0.01,0.1],'String','Método:','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','label_metodo','Callback','')
handles.deterministico=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.157877,0.7592212,0.1002928,0.0320561],'Relief','default','SliderStep',[0.01,0.1],'String','determinístico','Style','radiobutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','deterministico','Callback','deterministico_callback(handles)')
handles.estocastico=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.257877,0.7592212,0.0802928,0.0320561],'Relief','default','SliderStep',[0.01,0.1],'String','estocástico','Style','radiobutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','estocastico','Callback','estocastico_callback(handles)')
handles.set_metodo=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[16],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3436018,0.7476636,0.1464275,0.056729],'Relief','default','SliderStep',[0.01,0.1],'String','escolha um método...','Style','popupmenu','Value',[1],'VerticalAlignment','middle','Visible','on','Tag','set_metodo','Callback','set_metodo_callback(handles)')
handles.label_estimat=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[17],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.514,0.7516234,0.1095461,0.0487013],'Relief','default','SliderStep',[0.01,0.1],'String','estimativa inicial:','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','label_estimat','Callback','')
handles.estimat=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6112592,0.75,0.0688141,0.0487013],'Relief','default','SliderStep',[0.01,0.1],'String','[0 0]','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','estimat','Callback','')
handles.subtitulo=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[18],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.2359375,0.6,0.51875,0.05625],'Relief','default','SliderStep',[0.01,0.1],'String','Resultados da Otimização','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','titulo','Callback','')
handles.label_analitico=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[17],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0522255,0.5,0.095,0.0436137],'Relief','default','SliderStep',[0.01,0.1],'String','Mínimo analítico:','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','label_funcao','Callback','')
handles.analitico=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[14],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1508199,0.495,0.155,0.0509167],'Relief','default','SliderStep',[0.01,0.1],'String',' f(0,0) = 0','Style','text','Value',[1876],'VerticalAlignment','middle','Visible','on','Tag','funcao','Callback','')
handles.label_otimo=uicontrol(f,'unit','normalized','BackgroundColor',[0.7,0.7,0.7],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[17],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0522255,0.4,0.095,0.0436137],'Relief','default','SliderStep',[0.01,0.1],'String','Ótimo obtido:','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','label_funcao','Callback','')
handles.otimo=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[14],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1508199,0.4,0.155,0.0509167],'Relief','default','SliderStep',[0.01,0.1],'String','          visualizar no console','Style','text','Value',[1876],'VerticalAlignment','middle','Visible','on','Tag','funcao','Callback','')

//global grafico1
//global grafico2
//grafico1 = subplot(223)
//grafico2 = subplot(224)


//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////


function set_funcao_callback(handles)
    if handles.set_funcao.Value == 1 then
        handles.funcao.String = ' f(x,y) = -20e^(-0.2sqrt(0.5(x^2+y^2))) - e^( 0.5(cos(2pi*x) + cos(2pi*y)) ) + e + 20'
        handles.analitico.String = ' f(0,0) = 0 '
    end
    if handles.set_funcao.Value == 2 then
        handles.funcao.String = ' f(x,y) = (1.5 - x + xy)^2 + (2.25 - x + xy^2)^2 + (2.625 - x + xy^3)^2 )'
        handles.analitico.String = ' f(3,0.5) = 0 '
    end
    if handles.set_funcao.Value == 3 then
        handles.funcao.String = ' f(x,y) = [1+(x+y+1)^2*(19-14x+3x^2-14y+6xy+3y^2)]*[30+(2x-3y)^2*(18-32x+12x^2+48y-36xy+27y^2)])'
        handles.analitico.String = ' f(0,-1) = 3 '
    end
    if handles.set_funcao.Value == 4 then
        handles.funcao.String = ' f(x,y) = (x + 2y - 7)^2 + (2x + xy - 5)^2'
        handles.analitico.String = ' f(1,3) = 0 '
    end
    if handles.set_funcao.Value == 5 then
        handles.funcao.String = ' f(x,y) = 100*sqrt(|y - 0.01x^2|) + 0.01*|x + 10|'
        handles.analitico.String = ' f(-10,1) = 0 '
    end
    if handles.set_funcao.Value == 6 then
        handles.funcao.String = ' f(x,y) = 0.26*(x^2 + y^2) -0.48xy)'
        handles.analitico.String = ' f(0,0) = 0 '
    end
    if handles.set_funcao.Value == 7 then
        handles.funcao.String = ' f(x,y) = sin(3pi*x)^2+(x-1)^2*(1+sen(3pi*y)^2)+(y-1)^2*(1+sen(2pi*y)^2)'
        handles.analitico.String = ' f(1,1) = 0 '
    end
    if handles.set_funcao.Value == 8 then
        handles.funcao.String = ' f(x,y) = 2x^2 - 1.05x^4 + x^6/6 + xy + y^2'
        handles.analitico.String = ' f(0,0) = 0 '
    end
    if handles.set_funcao.Value == 9 then
        handles.funcao.String = ' f(x,y) = -(y + 47)*sin(sqrt(|y + x/2 + 47|)) - x*sin(sqrt(|x -(y + 47)|))'
        handles.analitico.String = ' f(512, 404.2319) = - 959.64066 '
    end   
    if handles.set_funcao.Value == 10 then
        handles.funcao.String = ' f(x,y) = sin(x + y) + (x - y)^2 - 1.5x + 2.5y + 1'
        handles.analitico.String = ' f(-0.54719,-1.54719) = -1.9133 '
    end
endfunction

function grafico_callback(handles)
//Write your callback for  grafico  here
    if handles.set_funcao.Value == 1 then
        [x,y]=meshgrid(-5:.1:5,-5:.1:5)
        z = -20 * exp(-0.2*sqrt(0.5 * (x.^2 + y.^2))) - exp(0.5 * (cos(2*%pi*x) + cos(2*%pi*y))) + 20 + %e
        //xsetech([0,0.3,0.5,0.7])
        //subplot(223)
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 2 then
        [x,y]=meshgrid(-4.5:.1:4.5,-5:.1:4.5)
        z = (1.5 - x + x.*y).^2 + (2.25 - x + x.*y.^2).^2 + (2.625 - x + x.*y.^3).^2
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z)  
    end
    if handles.set_funcao.Value == 3 then
        [x,y]=meshgrid(-2:.1:2,-2:.1:2)
        z = [1+(x+y+1).^2*(19-14*x+3*x.^2-14*y+6*x.*y+3*y.^2)]*[30+(2*x-3*y).^2*(18-32*x+12*x.^2+48*y-36*x.*y+27*y.^2)]
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z)  
    end
    if handles.set_funcao.Value == 4 then
        [x,y]=meshgrid(-10:.1:10,-10:.1:10)
        z = (x + 2*y - 7).^2 + (2*x + y - 5).^2
        g = scf()
        xset('colormap', jetcolormap(32))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 5 then
        [x,y]=meshgrid(-15:.1:-5,-3:.1:3)
        z = 100*sqrt(abs(y - 0.01*x.^2)) + 0.01*abs(x + 10)
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 6 then
        [x,y]=meshgrid(-10:.1:10,-10:.1:10)
        z = 0.26*(x.^2 + y.^2) - 0.48*x.*y
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 7 then
        [x,y]=meshgrid(-10:.1:10,-10:.1:10)
        z = sin(3*%pi*x).^2+(x-1).^2*(1+sin(3*%pi*y).^2)+(y-1).^2*(1+sin(2*%pi*y).^2)
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 8 then
        [x,y]=meshgrid(-5:.1:5,-5:.1:5)
        z = 2*x.^2 - 1.05*x.^4 + x.^6/6 + x.*y + y.^2
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
    if handles.set_funcao.Value == 9 then
        [x,y]=meshgrid(-512:15:512,-512:15:512)
        z = -(y + 47)*sin(sqrt(abs(y + x/2 + 47))) - x.*sin(sqrt(abs(x -(y + 47))))
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end   
    if handles.set_funcao.Value == 10 then
        [x,y]=meshgrid(-1.5:.1:4,-3:.1:4)
        z = sin(x + y) + (x - y).^2 - 1.5*x + 2.5*y + 1
        g = scf()
        xset('colormap', jetcolormap(64))
        surf(x,y,z) 
    end
endfunction


function curvas_nivel_callback(handles)
//Write your callback for  curvas_nivel  here
    if handles.set_funcao.Value == 1 then
        x=linspace(-5,5)
        y=linspace(-5,5)
        function z=funcao_selecionada(x,y), z = -20 * exp(-0.2*sqrt(0.5 * (x.^2 + y.^2))) - exp(0.5 * (cos(2*%pi*x) + cos(2*%pi*y))) + 20 + %e, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10) 
    end
    if handles.set_funcao.Value == 2 then
        x=linspace(-4.5,4.5)
        y=linspace(-4.5,4.5)
        function z=funcao_selecionada(x,y), z = (1.5 - x + x.*y).^2 + (2.25 - x + x.*y.^2).^2 + (2.625 - x + x.*y.^3).^2, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10) 
    end
    if handles.set_funcao.Value == 3 then
        x=linspace(-2,2)
        y=linspace(-2,2)
        function z=funcao_selecionada(x,y), z = [1+(x+y+1).^2*(19-14*x+3*x.^2-14*y+6*x.*y+3*y.^2)]*[30+(2*x-3*y).^2*(18-32*x+12*x.^2+48*y-36*x.*y+27*y.^2)], endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 4 then
        x=linspace(-10,10)
        y=linspace(-10,10)
        function z=funcao_selecionada(x,y), z = (x + 2*y - 7).^2 + (2*x + y - 5).^2, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 5 then
        x=linspace(-15,-5)
        y=linspace(-3,3)
        function z=funcao_selecionada(x,y), z = 100*sqrt(abs(y - 0.01*x.^2)) + 0.01*abs(x + 10), endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 6 then
        x=linspace(-10,10)
        y=linspace(-10,10)
        function z=funcao_selecionada(x,y), z = 0.26*(x.^2 + y.^2) - 0.48*x.*y, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 7 then
        x=linspace(-10,10)
        y=linspace(-10,10)
        function z=funcao_selecionada(x,y), z = sin(3*%pi*x).^2+(x-1).^2*(1+sin(3*%pi*y).^2)+(y-1).^2*(1+sin(2*%pi*y).^2), endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 8 then
        x=linspace(-5,5)
        y=linspace(-5,5)
        function z=funcao_selecionada(x,y), z = 2*x.^2 - 1.05*x.^4 + x.^6/6 + x.*y + y.^2, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
    if handles.set_funcao.Value == 9 then
        x=linspace(-512,512)
        y=linspace(-512,512)
        function z=funcao_selecionada(x,y), z = -(y + 47)*sin(sqrt(abs(y + x/2 + 47))) - x.*sin(sqrt(abs(x -(y + 47)))), endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end   
    if handles.set_funcao.Value == 10 then
        x=linspace(-1.5,4)
        y=linspace(-3,4)
        function z=funcao_selecionada(x,y), z = sin(x + y) + (x - y).^2 - 1.5*x + 2.5*y + 1, endfunction
        //xsetech([0.5,0.3,0.5,0.7])
        g = scf()
        contour(x,y,funcao_selecionada,10)
    end
endfunction


function deterministico_callback(handles)
    handles.estocastico.Value = 0
    handles.set_metodo.String = 'Hooke e Jeeves|Rosembrock|Simplex|Steepest Descent|Newton Multidimensional|DFP|Fletcher e Reeves'
    handles.set_metodo.Value = 1
endfunction


function estocastico_callback(handles)
    handles.deterministico.Value = 0
    handles.set_metodo.String = 'Simulated Annealing|Luus-Jaakola|Evolução Diferencial'
    handles.set_metodo.Value = 1
endfunction


function set_metodo_callback(handles)
//Write your callback for  set_metodo  here

endfunction

function y = f(x)
    if handles.set_funcao.Value == 1 then
        y = -20*exp(-0.2*sqrt(0.5*(x(1)^2+x(2)^2))) - exp( 0.5*(cos(2*%pi*x(1)) + cos(2*%pi*x(2))) ) + %e + 20
    end
    if handles.set_funcao.Value == 2 then
        y = (1.5 - x(1) + x(1)*x(2))^2 + (2.25 - x(1) + x(1)*x(2)^2)^2 + (2.625 - x(1) + x(1)*x(2)^3)^2 
    end
    if handles.set_funcao.Value == 3 then
        y = [1+(x(1)+x(2)+1)^2*(19-14*x(1)+3*x(1)^2-14*x(2)+6*x(1)*x(2)+3*x(2)^2)]*[30+(2*x(1)-3*x(2))^2*(18-32*x(1)+12*x(1)^2+48*x(2)-36*x(1)*x(2)+27*x(2)^2)]
    end
    if handles.set_funcao.Value == 4 then
        y = (x(1) + 2*x(2) - 7)^2 + (2*x(1) + x(2) - 5)^2
    end
    if handles.set_funcao.Value == 5 then
        y = 100*sqrt(abs(x(2) - 0.01*x(1)^2)) + 0.01*abs(x(1) + 10)
    end
    if handles.set_funcao.Value == 6 then
        y = 0.26*(x(1)^2 + x(2)^2) - 0.48*x(1)*x(2)
    end
    if handles.set_funcao.Value == 7 then
        y = sin(3*%pi*x(1))^2+(x(1)-1)^2*(1+sin(3*%pi*x(2))^2)+(x(2)-1)^2*(1+sin(2*%pi*x(2))^2)
    end
    if handles.set_funcao.Value == 8 then
        y = 2*x(1)^2 - 1.05*x(1)^4 + x(1)^6/6 + x(1)*x(2) + x(2)^2
    end
    if handles.set_funcao.Value == 9 then
        y = -(x(2) + 47)*sin(sqrt(abs(x(2) + x(1)/2 + 47))) - x(1)*sin(sqrt(abs(x(1) -(x(2) + 47))))
    end
    if handles.set_funcao.Value == 10 then
        y = sin(x(1) + x(2)) + (x(1) - x(2))^2 - 1.5*x(1) + 2.5*x(2) + 1
    end
endfunction

function otimizar_callback(handles)
//Write your callback for  otimizar  here
    if handles.deterministico.Value & handles.set_metodo.Value == 1 then
        exec("hook jeeves.sce")
        x = evstr(handles.estimat.String)
        otimo = hook_jeeves(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 2 then
        exec("rosembrock.sci")
        x = evstr(handles.estimat.String)
        otimo = rosembrock(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 3 then
        exec("simplex.sci")
        x = evstr(handles.estimat.String)
        otimo = simplex(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 4 then
        exec("steepest descent.sci")
        x = evstr(handles.estimat.String)
        otimo = steepest_descent(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 5 then
        exec("newton multivariavel.sce")
        x = evstr(handles.estimat.String)
        otimo = newton_multi(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 6 then
        exec("dfp.sce")
        x = evstr(handles.estimat.String)
        otimo = dfp(x')
        disp(otimo)
    end
    if handles.deterministico.Value & handles.set_metodo.Value == 7 then
        exec("fletcher reeves.sce")
        x = evstr(handles.estimat.String)
        otimo = fletcher_reeves(x')
        disp(otimo)
    end
    if handles.estocastico.Value & handles.set_metodo.Value == 1 then
        exec("SimulatedAnnealing.sce")
        x = evstr(handles.estimat.String)
        otimo = Simulated(x', 0.6)
        disp(otimo)
    end
    if handles.estocastico.Value & handles.set_metodo.Value == 2 then
        exec("luus jaakola.sci")
        x = evstr(handles.estimat.String)
        otimo = luus_jaakola(x')
        disp(otimo)
    end
    if handles.estocastico.Value & handles.set_metodo.Value == 3 then
        exec("evolução diferencial.sce")
        otimo = de()
        handles.otimo.String = ' ver console '
    end
endfunction


